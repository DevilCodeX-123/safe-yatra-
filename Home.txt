import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import { createPageUrl } from "@/utils";
import { User } from "@/entities/User";
import { Ride } from "@/entities/Ride";
import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import { MapPin, Clock, TrendingUp } from "lucide-react";
import { motion } from "framer-motion";

const translations = {
  hindi: {
    welcome: "स्वागत है",
    startRide: "नई यात्रा शुरू करें",
    recentRides: "हाल की यात्राएं",
    quickAccess: "त्वरित पहुंच",
    home: "घर",
    work: "कार्यालय"
  },
  english: {
    welcome: "Welcome",
    startRide: "Start New Ride",
    recentRides: "Recent Rides",
    quickAccess: "Quick Access",
    home: "Home",
    work: "Work"
  },
  marathi: {
    welcome: "स्वागत आहे",
    startRide: "नवीन प्रवास सुरू करा",
    recentRides: "अलीकडील प्रवास",
    quickAccess: "द्रुत प्रवेश",
    home: "घर",
    work: "कार्यालय"
  },
  bengali: {
    welcome: "স্বাগতম",
    startRide: "নতুন যাত্রা শুরু করুন",
    recentRides: "সাম্প্রতিক যাত্রা",
    quickAccess: "দ্রুত অ্যাক্সেস",
    home: "বাড়ি",
    work: "কাজ"
  },
  tamil: {
    welcome: "வரவேற்கிறோம்",
    startRide: "புதிய பயணத்தைத் தொடங்கு",
    recentRides: "சமீபத்திய பயணங்கள்",
    quickAccess: "விரைவு அணுகல்",
    home: "வீடு",
    work: "அலுவலகம்"
  }
};

export default function Home() {
  const [user, setUser] = useState(null);
  const [rides, setRides] = useState([]);
  const [darkMode, setDarkMode] = useState(false);
  const navigate = useNavigate();

  useEffect(() => {
    loadData();
  }, []);

  const loadData = async () => {
    try {
      const userData = await User.me();
      setUser(userData);
      setDarkMode(userData.dark_mode || false);

      if (!userData.profile_completed) {
        navigate(createPageUrl("ProfileSetup"));
        return;
      }

      const rideData = await Ride.filter({ created_by: userData.email }, "-created_date", 5);
      setRides(rideData);
    } catch (error) {
      navigate(createPageUrl("LanguageSelection"));
    }
  };

  const startRide = (source = "", destination = "") => {
    navigate(createPageUrl("RidePlanning") + `?source=${source}&destination=${destination}`);
  };

  const lang = user?.preferred_language || "hindi";
  const t = translations[lang];

  return (
    <div className={`min-h-screen py-8 px-4 ${darkMode ? 'bg-black' : 'bg-gray-50'}`}>
      <div className="max-w-4xl mx-auto">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          className="mb-8"
        >
          <h1 className={`text-3xl font-bold mb-2 ${darkMode ? 'text-white' : 'text-gray-900'}`}>
            {t.welcome}, {user?.full_name || 'User'}!
          </h1>
          <p className={darkMode ? 'text-gray-400' : 'text-gray-600'}>
            {t.quickAccess}
          </p>
        </motion.div>

        <div className="grid gap-6 mb-8">
          <motion.div
            initial={{ opacity: 0, scale: 0.95 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ delay: 0.1 }}
          >
            <Button
              onClick={() => startRide()}
              className={`w-full h-24 text-xl font-semibold rounded-2xl ${
                darkMode
                  ? 'bg-blue-600 hover:bg-blue-700 text-white'
                  : 'bg-gradient-to-r from-blue-500 to-green-500 hover:from-blue-600 hover:to-green-600 text-white'
              }`}
            >
              <MapPin className="w-8 h-8 mr-3" />
              {t.startRide}
            </Button>
          </motion.div>

          <div className="grid md:grid-cols-2 gap-4">
            <motion.div
              initial={{ opacity: 0, x: -20 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ delay: 0.2 }}
            >
              <Card
                onClick={() => startRide(user?.home_location, "")}
                className={`p-6 cursor-pointer transition-all hover:shadow-lg ${
                  darkMode ? 'bg-gray-900 border-gray-800 hover:bg-gray-800' : 'hover:border-blue-300'
                }`}
              >
                <div className="flex items-center gap-3">
                  <div className={`w-12 h-12 rounded-xl flex items-center justify-center ${
                    darkMode ? 'bg-blue-900' : 'bg-blue-100'
                  }`}>
                    <MapPin className={`w-6 h-6 ${darkMode ? 'text-blue-400' : 'text-blue-600'}`} />
                  </div>
                  <div>
                    <p className={`font-medium ${darkMode ? 'text-white' : 'text-gray-900'}`}>
                      {t.home}
                    </p>
                    <p className={`text-sm ${darkMode ? 'text-gray-400' : 'text-gray-500'}`}>
                      {user?.home_location}
                    </p>
                  </div>
                </div>
              </Card>
            </motion.div>

            <motion.div
              initial={{ opacity: 0, x: 20 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ delay: 0.3 }}
            >
              <Card
                onClick={() => startRide(user?.work_location, "")}
                className={`p-6 cursor-pointer transition-all hover:shadow-lg ${
                  darkMode ? 'bg-gray-900 border-gray-800 hover:bg-gray-800' : 'hover:border-blue-300'
                }`}
              >
                <div className="flex items-center gap-3">
                  <div className={`w-12 h-12 rounded-xl flex items-center justify-center ${
                    darkMode ? 'bg-green-900' : 'bg-green-100'
                  }`}>
                    <MapPin className={`w-6 h-6 ${darkMode ? 'text-green-400' : 'text-green-600'}`} />
                  </div>
                  <div>
                    <p className={`font-medium ${darkMode ? 'text-white' : 'text-gray-900'}`}>
                      {t.work}
                    </p>
                    <p className={`text-sm ${darkMode ? 'text-gray-400' : 'text-gray-500'}`}>
                      {user?.work_location}
                    </p>
                  </div>
                </div>
              </Card>
            </motion.div>
          </div>
        </div>

        {rides.length > 0 && (
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.4 }}
          >
            <h2 className={`text-xl font-bold mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`}>
              {t.recentRides}
            </h2>
            <div className="space-y-3">
              {rides.map((ride) => (
                <Card
                  key={ride.id}
                  className={`p-4 ${darkMode ? 'bg-gray-900 border-gray-800' : ''}`}
                >
                  <div className="flex items-center justify-between">
                    <div className="flex items-center gap-3">
                      <div className={`w-10 h-10 rounded-lg flex items-center justify-center ${
                        darkMode ? 'bg-gray-800' : 'bg-gray-100'
                      }`}>
                        <TrendingUp className={`w-5 h-5 ${darkMode ? 'text-gray-400' : 'text-gray-600'}`} />
                      </div>
                      <div>
                        <p className={`font-medium ${darkMode ? 'text-white' : 'text-gray-900'}`}>
                          {ride.source} → {ride.destination}
                        </p>
                        <p className={`text-sm ${darkMode ? 'text-gray-400' : 'text-gray-500'}`}>
                          <Clock className="w-3 h-3 inline mr-1" />
                          {new Date(ride.created_date).toLocaleDateString()}
                        </p>
                      </div>
                    </div>
                  </div>
                </Card>
              ))}
            </div>
          </motion.div>
        )}
      </div>
    </div>
  );
}