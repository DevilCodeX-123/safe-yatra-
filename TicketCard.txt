import React, { useState } from "react";
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Bus, Train, Footprints, CreditCard, Clock, IndianRupee } from "lucide-react";

const translations = {
  hindi: {
    journey: "यात्रा विवरण",
    buyTicket: "संयुक्त टिकट खरीदें",
    purchased: "टिकट खरीदी गई!",
    duration: "अवधि",
    minutes: "मिनट"
  },
  english: {
    journey: "Journey Details",
    buyTicket: "Buy Combined Ticket",
    purchased: "Ticket Purchased!",
    duration: "Duration",
    minutes: "minutes"
  },
  marathi: {
    journey: "प्रवास तपशील",
    buyTicket: "एकत्रित तिकीट खरेदी करा",
    purchased: "तिकीट खरेदी केले!",
    duration: "कालावधी",
    minutes: "मिनिटे"
  },
  bengali: {
    journey: "যাত্রার বিবরণ",
    buyTicket: "সম্মিলিত টিকিট কিনুন",
    purchased: "টিকিট কেনা হয়েছে!",
    duration: "সময়কাল",
    minutes: "মিনিট"
  },
  tamil: {
    journey: "பயண விவரங்கள்",
    buyTicket: "ஒருங்கிணைந்த டிக்கெட் வாங்கவும்",
    purchased: "டிக்கெட் வாங்கப்பட்டது!",
    duration: "காலம்",
    minutes: "நிமிடங்கள்"
  }
};

const modeIcons = {
  bus: Bus,
  metro: Train,
  walk: Footprints
};

export default function TicketCard({ routeDetails, darkMode, lang }) {
  const [purchased, setPurchased] = useState(false);
  const t = translations[lang] || translations.hindi;

  const handlePurchase = () => {
    setPurchased(true);
    setTimeout(() => setPurchased(false), 3000);
  };

  return (
    <Card className={`p-6 ${darkMode ? 'bg-gray-900 border-gray-800' : ''}`}>
      <h3 className={`font-semibold mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`}>
        {t.journey}
      </h3>

      <div className="space-y-3 mb-6">
        {routeDetails.segments?.map((segment, idx) => {
          const Icon = modeIcons[segment.mode.toLowerCase()] || Bus;
          return (
            <div 
              key={idx}
              className={`p-4 rounded-lg border ${
                darkMode ? 'bg-gray-800 border-gray-700' : 'bg-gray-50 border-gray-200'
              }`}
            >
              <div className="flex items-center justify-between mb-2">
                <div className="flex items-center gap-2">
                  <Icon className={`w-5 h-5 ${darkMode ? 'text-blue-400' : 'text-blue-600'}`} />
                  <span className={`font-medium ${darkMode ? 'text-white' : 'text-gray-900'}`}>
                    {segment.name}
                  </span>
                </div>
                <span className={`text-sm font-semibold ${darkMode ? 'text-green-400' : 'text-green-600'}`}>
                  ₹{segment.price}
                </span>
              </div>
              <div className={`text-sm ${darkMode ? 'text-gray-400' : 'text-gray-600'}`}>
                {segment.from} → {segment.to}
              </div>
              <div className={`text-xs mt-1 ${darkMode ? 'text-gray-500' : 'text-gray-500'}`}>
                <Clock className="w-3 h-3 inline mr-1" />
                {segment.duration} {t.minutes} • {segment.distance} km
              </div>
            </div>
          );
        })}
      </div>

      <div className={`p-4 rounded-lg mb-4 ${
        darkMode ? 'bg-blue-900/20 border border-blue-800' : 'bg-blue-50 border border-blue-200'
      }`}>
        <div className="flex items-center justify-between">
          <span className={`font-semibold ${darkMode ? 'text-white' : 'text-gray-900'}`}>
            Total
          </span>
          <div className="flex items-center gap-1">
            <IndianRupee className={`w-5 h-5 ${darkMode ? 'text-blue-400' : 'text-blue-600'}`} />
            <span className={`text-2xl font-bold ${darkMode ? 'text-blue-400' : 'text-blue-600'}`}>
              {routeDetails.total_price}
            </span>
          </div>
        </div>
        <div className={`text-sm mt-1 ${darkMode ? 'text-gray-400' : 'text-gray-600'}`}>
          {routeDetails.total_duration} {t.minutes} • {routeDetails.total_distance} km
        </div>
      </div>

      <Button
        onClick={handlePurchase}
        disabled={purchased}
        className={`w-full h-12 font-semibold ${
          purchased
            ? darkMode ? 'bg-green-700' : 'bg-green-500'
            : darkMode ? 'bg-blue-600 hover:bg-blue-700' : 'bg-blue-500 hover:bg-blue-600'
        }`}
      >
        {purchased ? (
          <>✓ {t.purchased}</>
        ) : (
          <>
            <CreditCard className="w-5 h-5 mr-2" />
            {t.buyTicket}
          </>
        )}
      </Button>
    </Card>
  );
}
